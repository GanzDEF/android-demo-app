project.ext {
    appcompat = "26.0.1"
    dagger = "2.0.1"
    butterknife = "8.8.1"
    retrofit = "2.2.0"
    okhttplogging = "3.9.1"
    rxjava = "2.0.8"
    rxandroid = "2.0.1"
    rxbinding = "0.3.0"
    annotation = "1.0"
    junit = "4.12"
    mockito = "2.19.1"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply from: "../config/signing.gradle"
apply from: "../config/jacoco.gradle"
apply from: "../config/pit.gradle"

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.test.xyz.demo"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        // If you will run this sample, please use your own open weather key here ...
        buildConfigField 'String', 'OPEN_WEATHER_APP_KEY', "\"" + System.getenv('OPEN_WEATHER_KEY') + "\""
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/kotlin']
        }

        test {
            java.srcDirs += 'src/test/kotlin'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$project.appcompat"
    implementation "com.android.support:recyclerview-v7:$project.appcompat"
    implementation "com.android.support:design:$project.appcompat"

    // Retrofit
    implementation "com.squareup.okhttp3:logging-interceptor:$project.okhttplogging"
    implementation "com.squareup.retrofit2:retrofit:$project.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$project.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofit"

    // Rx Android support
    implementation "io.reactivex.rxjava2:rxandroid:$project.rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$project.rxjava"

    // Dagger-2
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    implementation "com.google.dagger:dagger-compiler:$project.dagger"

    annotationProcessor "com.google.dagger:dagger-compiler:$project.dagger"
    kapt "com.google.dagger:dagger-compiler:$project.dagger"
    //implementation "com.google.dagger:dagger:$project.dagger"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$project.butterknife"
    kapt "com.jakewharton:butterknife-compiler:$project.butterknife"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Test
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$project.dagger"
    kaptTest "com.google.dagger:dagger-compiler:$project.dagger"

    testImplementation "junit:junit:$project.junit"
    testImplementation "com.google.dagger:dagger:$project.dagger"
    testImplementation "com.google.dagger:dagger-compiler:$project.dagger"
    testImplementation "org.mockito:mockito-core:$project.mockito"

    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1'
}
repositories {
    mavenCentral()
}
